
;; indicators

; ratio of sucessful communication
to-report intelligibility-rate
  report (count speakers with [happy? = true]) / count speakers
end


; language size
to-report language-size
  report count spoken-words
end


; diversity linear trend (linear OLS)
to-report diversity-linear-trend
  ; needs to memorize diversity in time
  let reg matrix:regress matrix:from-column-list (list diversities (seq 1 length diversities 1))
  report item 1 (item 0 reg)
end


; language diversity
to-report language-diversity
  
  ;; first attempt : \sum_sem d(w,sem)
  let res 0
  
  if semantic-mapping = 0 [report 0]
  
  ; TODO : forgotten words are taken into account -> kill them ! 
  
  foreach table:keys semantic-mapping [
    let w1 one-of spoken-words with [word-text = first ? and [word-text] of semantic = last ?]
    let w2 one-of spoken-words with [word-text = last ? and [word-text] of semantic = last ?]
    if w1 = nobody or w2 = nobody [show ? show table:get semantic-mapping ? let x user-yes-or-no? "bug : word does not exist anymore"]
    set res res + word-distance w1 w2
  ]
  
  report res
end



to update-indicators
  set diversities lput language-diversity diversities
end


; proper print
to show-vocabulary
  let semvals table:make
  
  foreach table:keys semantic-mapping [
     ifelse table:has-key? semvals table:get semantic-mapping ? [
         table:put semvals table:get semantic-mapping ? (lput first ? (table:get semvals (table:get semantic-mapping ?)))
       ][
         table:put semvals table:get semantic-mapping ? (list first ?)
     ]
  ]
  
  foreach table:keys semvals [
    let p (word ? " <- ")
    foreach table:get semvals ? [set p (word p " - " ?)]
    output-print p
  ]
  
end